name: ci

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  check:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup Node.js and NPM
        uses: volta-cli/action@v4
      - name: Install dependencies
        run: npm install
      - name: Check
        run: npm run check
      - name: ShellCheck
        uses: ludeeus/action-shellcheck@master
        with:
          severity: error
          scandir: ./scripts

  release:
    runs-on: ubuntu-latest
    needs: [check]
    permissions:
      contents: write
    strategy:
      matrix:
        include:
          - version: '0.11.0'
      fail-fast: false
    steps:
      - name: Set environment variables
        run: |
          echo "VERSION=${{ matrix.version }}" >> $GITHUB_ENV
          echo "TAG=v${{ matrix.version }}" >> $GITHUB_ENV
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build packages
        uses: docker/bake-action@v6
        with:
          source: .
      - name: Create GitHub release
        if: github.event_name == 'push'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: scripts/create_release.sh

  set-latest:
    runs-on: ubuntu-latest
    needs: release
    if: github.event_name == 'push'
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set latest release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: scripts/set_latest_release.sh
